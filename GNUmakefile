
# TODO: liquid-dsp is a software dependency that we download when 'make
# download' is run, which 'make build' and 'make' depend on.  It would be
# simplest to not have this built and installed with this package, and
# just have it be an pre-installed prerequisite package.  The problem is
# that liquid-dsp does have a (OS or other-wise) managed or automated
# method to be installed with.  It's not a mature package at the time of
# writing this.

# TODO: In looking at the liquid-dsp ofdmflexframegen and
# ofdmflexframesync code we see it hammers the libc memory allocator
# (realloc, malloc, and free) and does an lot of unnecessary memory copies
# when it is running at steady state.  It is happening in the inner most
# loop.  A simple size change flag check may speed it up this code 10
# fold, so it checks to see if it needs to reallocate memory before just
# reallocating memory for no reason at every frame.


# We must load the config.make (configuration) which may define some
# optional make options BUILD_UHD and BUILD_LIQUID_DSP as make variables.
# If not for these options, we'd have config.make loaded by "include
# ./quickbuild.make" in the last line of this file.
-include ./config.make

# We wish to have things accessed/built/installed in this order
# so we override subdirs that is auto-generated by quickbuild.make:
SUBDIRS := include lib bin share etc interactiveTests

ifdef BUILD_UHD
SUBDIRS := uhd $(SUBDIRS)
endif


ifdef BUILD_GNU_RADIO
SUBDIRS := gnuradio $(SUBDIRS)
endif


# The BUILD_LIQUID_DSP option also builds and installs libfec.
ifdef BUILD_LIQUID_DSP
SUBDIRS := liquid-dsp $(SUBDIRS)
endif



# The program crts_mkTUN needs a special installation so it can startup as
# effective user root and create a TUN device and route it, and then it
# goes back to being a regular user.  We could have added this as the last
# part of the "install" target but we wanted to keep the basic install as
# a non-root thing, with no root access required.  We think that having a
# software build system require "root" access is a very bad thing.  We are
# not building an operating system, we are building files.  Operating
# system (OS) package management is not the same as a software building.
# You should never have to blindly run "sudo make install" unless you are
# building core OS packages, like the kernel.
#
# You can run 'make sudo_install' or 'make root_install' as root; or not
# at all if you are not using the modules that use the TUN.
#

# The "special program":
crts_mkTUN = $(PREFIX)/bin/crts_mkTUN


sudo_install:
	sudo chown root:root $(crts_mkTUN)
	sudo chmod u+s $(crts_mkTUN)

# If you do not have the sudo program installed you can run 'make
# root_install' as root to run this make target:
root_install:
	chown root:root $(crts_mkTUN)
	chmod u+s $(crts_mkTUN)


include ./quickbuild.make
