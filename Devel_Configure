#!/bin/bash

# Running this script generates the one file config.make

# This script sets up the software for a typical development
# configuration.  You are not necessarily encouraged to use this, but
# copying it and making your own local version of it is encouraged.


# We let the make files have a prefix (or PREFIX) which is an encapsulated
# installation directory, where all files that get installed are installed
# to.  There will be sub-directories created in the prefix directory like
# bin/ lib/ include/ share/ and etc/ ... (pun intended).
#
# This "prefix" idea has a history and many different manifestations.
#
#   references:
#
# https://www.gnu.org/prep/standards/standards.html#Directory-Variables
# http://www.freetds.org/userguide/config.htm
# https://askubuntu.com/questions/891835/what-does-prefix-do-exactly-when-used-in-configure

# We try to limit all user configuration options to the one file
# ./config.make which is a GNU make file that is accessed by most other
# make files (named GNUmakefile).  If config.make is changed after files
# are generated you want to run "make clean && make" to rebuild the
# generated files that depend on these make configuration variables.


root=/usr/local/encap


set -e

# Get in this directory where this file is:
dir="$(dirname ${BASH_SOURCE[0]})"
[ -n "$dir" ] || exit 1
cd "$dir"


[ ! -f quickbuild.make ] && ./bootstrap

cat > config.make << EOF
# This is a generated file

# comment out to exclude building documentation
DOC := doc


# Where and what version of UHD and GUNradio to install

# These git TAGS are optional:
# If not set then the tags will be gotten from those set
# in uhd/ and gnuradio/
#
UHD_TAG = v3.12.0.0-rc1
#UHD_TAG = release_003_010_003_000
#UHD_TAG = v3.11.1.0

GNURADIO_TAG = v3.7.12.0
# volk is a git submodule that is needed by GNUradio
VOLK_TAG = v1.4


UHD_PREFIX = $root/uhd_\$(UHD_TAG)
GNURADIO_PREFIX = $root/gnuradio_\$(GNURADIO_TAG)

LIBWEBSOCKETS_TAG = v3.0.0
LIBWEBSOCKETS_PREFIX = $root/libwebsockets_\$(LIBWEBSOCKETS_TAG)

NOPOLL_TAG = 0.4.6
NOPOLL_PREFIX = $root/nopoll_\$(NOPOLL_TAG)


# CRTS prefix
PREFIX = $root/crts


# compiler options
CFLAGS := -g -Wall -Werror
CXXFLAGS := \$(CFLAGS)

# Add extra debugging code to the buffering code
# only when the below DEBUG thing is defined
CPPFLAGS := -DBUFFER_DEBUG


# select 1 of the next two lines, effects include/crts/debug.h
DEBUG := \#define DEBUG
#DEBUG := // DEBUG is not defined


# select 1 of the next few lines, effects include/crts/debug.h
#SPEW_LEVEL := \#define SPEW_LEVEL_ERROR
#SPEW_LEVEL := \#define SPEW_LEVEL_WARN
#SPEW_LEVEL := \#define SPEW_LEVEL_NOTICE
#SPEW_LEVEL := \#define SPEW_LEVEL_INFO
SPEW_LEVEL  := \#define SPEW_LEVEL_DEBUG


# A JSON array of objects that list computers and port numbers:
#USRP_HOSTS := [\"\",{\"host\":\"198.82.18.140\",\"port\":\"7000\"}]
USRP_HOSTS := [\"\"]


EOF

echo
echo

cat config.make
echo
